o en# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/manu/.oh-my-zsh"

source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"


# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="spaceship"

SPACESHIP_BATTERY_SHOW=always
SPACESHIP_EXEC_TIME_ELAPSED=1
SPACESHIP_EXIT_CODE_SHOW=true
SPACESHIP_EXIT_CODE_SYMBOL=""
SPACESHIP_GIT_SYMBOL=""
SPACESHIP_KUBECTL_SHOW=true
SPACESHIP_KUBECTL_VERSION_SHOW=false
SPACESHIP_PROMPT_DEFAULT_PREFIX=""
SPACESHIP_PROMPT_SEPARATE_LINE=false

# SPACESHIP_PROMPT_ORDER=(time user dir host git hg package node ruby elm elixir xcode swift golang php rust haskell julia docker aws gcloud venv conda pyenv dotnet ember kubectl terraform exec_time line_sep battery vi_mode jobs exit_code char)
SPACESHIP_PROMPT_ORDER=(
    time          # Time stampts section
    user          # Username section
    dir           # Current directory section
    host          # Hostname section
    git           # Git section (git_branch + git_status)
    # hg            # Mercurial section (hg_branch  + hg_status)
    # package       # Package version
    node          # Node.js section
    ruby          # Ruby section
    elm           # Elm section
    elixir        # Elixir section
    xcode         # Xcode section
    swift         # Swift section
    golang        # Go section
    php           # PHP section
    rust          # Rust section
    haskell       # Haskell Stack section
    julia         # Julia section
    # docker        # Docker section
    aws           # Amazon Web Services section
    # gcloud        # Google Cloud Platform section
    venv          # virtualenv section
    conda         # conda virtualenv section
    pyenv         # Pyenv section
    dotnet        # .NET section
    ember         # Ember.js section
    # kubectl       # Kubectl context section
    terraform     # Terraform workspace section
    exec_time     # Execution time
    line_sep      # Line break
    battery       # Battery level and status
    vi_mode       # Vi-mode indicator
    jobs          # Background jobs indicator
    exit_code     # Exit code section
    char          # Prompt character
  )

# SPACESHIP_PROMPT_SEPARATE_LINE=true
# SPACESHIP_PROMPT_ORDER=(
#     battery       # Battery level and status
#     # hg            # Mercurial section (hg_branch  + hg_status)
#     # package       # Package version
#     node          # Node.js section
#     ruby          # Ruby section
#     elm           # Elm section
#     elixir        # Elixir section
#     xcode         # Xcode section
#     swift         # Swift section
#     golang        # Go section
#     php           # PHP section
#     rust          # Rust section
#     haskell       # Haskell Stack section
#     julia         # Julia section
#     # docker        # Docker section
#     aws           # Amazon Web Services section
#     gcloud        # Google Cloud Platform section
#     venv          # virtualenv section
#     conda         # conda virtualenv section
#     pyenv         # Pyenv section
#     dotnet        # .NET section
#     ember         # Ember.js section
#     kubectl       # Kubectl context section
#     terraform     # Terraform workspace section
#     line_sep      # Line break

#     time          # Time stampts section
#     user          # Username section
#     dir           # Current directory section
#     host          # Hostname section
#     git           # Git section (git_branch + git_status)
#     exec_time     # Execution time
#     vi_mode       # Vi-mode indicator
#     jobs          # Background jobs indicator
#     exit_code     # Exit code section
#     char          # Prompt character
#   )

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=/Users/manu/dotfiles/ohmyzsh-custom

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git sublime rbenv asdf ruby rails macos docker python kubectl zsh-autosuggestions gcloud pyenv pipenv fzf)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias reloadzshrc='source ~/.zshrc'
alias opendot='st ~/dotfiles'
# alias sb="st"
alias be="bundle exec"
function gmo() { git merge --no-edit --no-ff "origin/$1"; }

export PATH=$HOME/.local/bin:$PATH
# Cellar/yarn/1.16.0/bin/yarn
# ln -s "/usr/local/bin/yarn" ~/.local/bin/yarn

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/manu/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/manu/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/manu/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/manu/anaconda3/bin:$PATH"

    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# conda config --set auto_activate_base false

# conda activate and conda deactivate

source ~/dotfiles/ohmyzsh-custom/zsh-autoenv/autoenv.zsh


export LDFLAGS="-L/usr/local/opt/zlib/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include"



# export "python3.8"="/usr/local/opt/python@3.8/libexec/bin"
export PATH="/usr/local/opt/libpq/bin:$PATH"

# ts () {
#   DIR=$(dirname "$1");
#   mkdir -p "$DIR";
#   touch "$1";
#   sb "$1";
# }

# source  ~/.bash/source/00_dotfiles.sh
# source  ~/.bash/source/50_editor.sh

sshpath () {
  kubectl config use-context sam; kubectl exec --stdin --tty deployment/path -- bash
}



alias subl="sb --add "
ts () {
  DIR=$(dirname "$1");
  mkdir -p "$DIR";
  touch "$1";
  sleep 1
  sb "$1";
}


if [[ ! "$SSH_TTY" ]]; then
  export EDITOR='sb -n -w'
  export LESSEDIT='sb -n -w'
else
  export EDITOR='sb -n -w'
fi

export VISUAL="sb -n -w"

export THOR_MERGE="sb -n -w"

alias e=sb
alias openbash='sb $DOTFILES/rc/source/'
alias opendot='sb $DOTFILES/'
alias openup='sb $DOTFILES/rc/bin/up'
alias catup='cat $DOTFILES/rc/bin/up'
alias upls="catup | grep -o '  .*)' | grep -o '[a-z][a-z]*' | cat"
alias cddot='cd $DOTFILES/'
alias openhost='sb /etc/hosts'
alias reloadbash='source ~/.bash_profile'

function w2 {
    while :; do clear; date; echo; $@; sleep 2; done
}


# . /usr/local/opt/asdf/libexec/asdf.sh


m () { cd ~/.k; eval "$(ruby k.rb "$@")"; }
